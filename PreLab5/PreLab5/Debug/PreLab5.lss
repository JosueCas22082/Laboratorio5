
PreLab5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000091c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008a8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  0000091c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000091c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000094c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  0000098c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000da2  00000000  00000000  00000a64  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000092c  00000000  00000000  00001806  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000712  00000000  00000000  00002132  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002d4  00000000  00000000  00002844  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000049e  00000000  00000000  00002b18  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008f1  00000000  00000000  00002fb6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  000038a7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 b9 00 	jmp	0x172	; 0x172 <__vector_21>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a2 30       	cpi	r26, 0x02	; 2
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 84 00 	call	0x108	; 0x108 <main>
  88:	0c 94 52 04 	jmp	0x8a4	; 0x8a4 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <initADC>:
// Configuración para el ADC.

#include "ADC.h"

void initADC(void){
	ADMUX = 0;
  90:	ec e7       	ldi	r30, 0x7C	; 124
  92:	f0 e0       	ldi	r31, 0x00	; 0
  94:	10 82       	st	Z, r1
	ADMUX |= (1 << REFS0);		// VREF = AVCC
  96:	80 81       	ld	r24, Z
  98:	80 64       	ori	r24, 0x40	; 64
  9a:	80 83       	st	Z, r24
	ADMUX &= ~(1 << REFS1);		// VREF = AVCC
  9c:	80 81       	ld	r24, Z
  9e:	8f 77       	andi	r24, 0x7F	; 127
  a0:	80 83       	st	Z, r24
	ADMUX |= (1 << ADLAR);		// JUSTIFICACION A LA DERECHA
  a2:	80 81       	ld	r24, Z
  a4:	80 62       	ori	r24, 0x20	; 32
  a6:	80 83       	st	Z, r24
	
	ADCSRA = 0;
  a8:	ea e7       	ldi	r30, 0x7A	; 122
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	10 82       	st	Z, r1
	ADCSRA |= (1 << ADEN);		// ENCIENDER EL ADC
  ae:	80 81       	ld	r24, Z
  b0:	80 68       	ori	r24, 0x80	; 128
  b2:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADIE);		// HABILITAR ISR ADC
  b4:	80 81       	ld	r24, Z
  b6:	88 60       	ori	r24, 0x08	; 8
  b8:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADPS0);
  ba:	80 81       	ld	r24, Z
  bc:	81 60       	ori	r24, 0x01	; 1
  be:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADPS1);
  c0:	80 81       	ld	r24, Z
  c2:	82 60       	ori	r24, 0x02	; 2
  c4:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADPS2);		// PRESCALES 128 -> 16M = 125kHz
  c6:	80 81       	ld	r24, Z
  c8:	84 60       	ori	r24, 0x04	; 4
  ca:	80 83       	st	Z, r24
	
	//Entradas para los potenciometros.
	
	DIDR0 |= (1 << ADC0D);		// DESABILITAR LA ENTRADA DIGITAL PC0
  cc:	ee e7       	ldi	r30, 0x7E	; 126
  ce:	f0 e0       	ldi	r31, 0x00	; 0
  d0:	80 81       	ld	r24, Z
  d2:	81 60       	ori	r24, 0x01	; 1
  d4:	80 83       	st	Z, r24
	DIDR0 |= (1 << ADC1D);		// DESABILITAR LA ENTRADA DIGITAL PC1
  d6:	80 81       	ld	r24, Z
  d8:	82 60       	ori	r24, 0x02	; 2
  da:	80 83       	st	Z, r24
	DIDR0 |= (1 << ADC2D);		// DESABILITAR LA ENTRADA DIGITAL PC2
  dc:	80 81       	ld	r24, Z
  de:	84 60       	ori	r24, 0x04	; 4
  e0:	80 83       	st	Z, r24
  e2:	08 95       	ret

000000e4 <ADC_CONVERT>:
}

uint8_t ADC_CONVERT(uint8_t canal){
	ADMUX = (ADMUX & 0xF0)|canal;	// SELECCION DEL CANAL
  e4:	ec e7       	ldi	r30, 0x7C	; 124
  e6:	f0 e0       	ldi	r31, 0x00	; 0
  e8:	90 81       	ld	r25, Z
  ea:	90 7f       	andi	r25, 0xF0	; 240
  ec:	89 2b       	or	r24, r25
  ee:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);			// INICIA EL ADC
  f0:	ea e7       	ldi	r30, 0x7A	; 122
  f2:	f0 e0       	ldi	r31, 0x00	; 0
  f4:	80 81       	ld	r24, Z
  f6:	80 64       	ori	r24, 0x40	; 64
  f8:	80 83       	st	Z, r24
	while((ADCSRA)&(1<<ADSC));		// FINALIZA LA CONVERSION
  fa:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  fe:	86 fd       	sbrc	r24, 6
 100:	fc cf       	rjmp	.-8      	; 0xfa <ADC_CONVERT+0x16>
	return(ADCH);
 102:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
 106:	08 95       	ret

00000108 <main>:
    }
}

void setup (void){
	UCSR0B = 0;		// DESABILITA TX Y RX
	DDRC = 0;		// PUERTO C COMO ENTRADA
 108:	f8 94       	cli
 10a:	14 bc       	out	0x24, r1	; 36
 10c:	15 bc       	out	0x25, r1	; 37
 10e:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
 112:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
 116:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
 11a:	10 92 b1 00 	sts	0x00B1, r1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
 11e:	0e 94 48 00 	call	0x90	; 0x90 <initADC>
 122:	4f e3       	ldi	r20, 0x3F	; 63
 124:	5c e9       	ldi	r21, 0x9C	; 156
 126:	68 e0       	ldi	r22, 0x08	; 8
 128:	70 e0       	ldi	r23, 0x00	; 0
 12a:	80 e0       	ldi	r24, 0x00	; 0
 12c:	0e 94 2d 01 	call	0x25a	; 0x25a <initPWM1A>
 130:	60 e0       	ldi	r22, 0x00	; 0
 132:	74 e0       	ldi	r23, 0x04	; 4
 134:	80 e0       	ldi	r24, 0x00	; 0
 136:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <initPWM2A>
 13a:	78 94       	sei
 13c:	8f e3       	ldi	r24, 0x3F	; 63
 13e:	9c e9       	ldi	r25, 0x9C	; 156
 140:	01 97       	sbiw	r24, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <main+0x38>
 144:	00 c0       	rjmp	.+0      	; 0x146 <main+0x3e>
 146:	00 00       	nop
 148:	80 e0       	ldi	r24, 0x00	; 0
 14a:	0e 94 72 00 	call	0xe4	; 0xe4 <ADC_CONVERT>
 14e:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <DutyC1>
 152:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <updateDutyCA1>
 156:	8f e3       	ldi	r24, 0x3F	; 63
 158:	9c e9       	ldi	r25, 0x9C	; 156
 15a:	01 97       	sbiw	r24, 0x01	; 1
 15c:	f1 f7       	brne	.-4      	; 0x15a <main+0x52>
 15e:	00 c0       	rjmp	.+0      	; 0x160 <main+0x58>
 160:	00 00       	nop
 162:	81 e0       	ldi	r24, 0x01	; 1
 164:	0e 94 72 00 	call	0xe4	; 0xe4 <ADC_CONVERT>
 168:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 16c:	0e 94 13 02 	call	0x426	; 0x426 <updateDutyCA2>
 170:	e5 cf       	rjmp	.-54     	; 0x13c <main+0x34>

00000172 <__vector_21>:
}

ISR(ADC_vect){
 172:	1f 92       	push	r1
 174:	0f 92       	push	r0
 176:	0f b6       	in	r0, 0x3f	; 63
 178:	0f 92       	push	r0
 17a:	11 24       	eor	r1, r1
 17c:	8f 93       	push	r24
 17e:	ef 93       	push	r30
 180:	ff 93       	push	r31
	ADCSRA |= (1 << ADIF);	//LIMPIA LA BANDERA
 182:	ea e7       	ldi	r30, 0x7A	; 122
 184:	f0 e0       	ldi	r31, 0x00	; 0
 186:	80 81       	ld	r24, Z
 188:	80 61       	ori	r24, 0x10	; 16
 18a:	80 83       	st	Z, r24
}
 18c:	ff 91       	pop	r31
 18e:	ef 91       	pop	r30
 190:	8f 91       	pop	r24
 192:	0f 90       	pop	r0
 194:	0f be       	out	0x3f, r0	; 63
 196:	0f 90       	pop	r0
 198:	1f 90       	pop	r1
 19a:	18 95       	reti

0000019c <map>:
	}

	if (prescaler == 8) {
		TCCR1B |= (1 << CS11);
		} else {
		TCCR1B |= (1 << CS12);
 19c:	4f 92       	push	r4
 19e:	5f 92       	push	r5
 1a0:	6f 92       	push	r6
 1a2:	7f 92       	push	r7
 1a4:	af 92       	push	r10
 1a6:	bf 92       	push	r11
 1a8:	cf 92       	push	r12
 1aa:	df 92       	push	r13
 1ac:	ef 92       	push	r14
 1ae:	ff 92       	push	r15
 1b0:	0f 93       	push	r16
 1b2:	1f 93       	push	r17
 1b4:	cf 93       	push	r28
 1b6:	df 93       	push	r29
 1b8:	cd b7       	in	r28, 0x3d	; 61
 1ba:	de b7       	in	r29, 0x3e	; 62
 1bc:	28 97       	sbiw	r28, 0x08	; 8
 1be:	0f b6       	in	r0, 0x3f	; 63
 1c0:	f8 94       	cli
 1c2:	de bf       	out	0x3e, r29	; 62
 1c4:	0f be       	out	0x3f, r0	; 63
 1c6:	cd bf       	out	0x3d, r28	; 61
 1c8:	29 01       	movw	r4, r18
 1ca:	3a 01       	movw	r6, r20
 1cc:	ed 82       	std	Y+5, r14	; 0x05
 1ce:	fe 82       	std	Y+6, r15	; 0x06
 1d0:	0f 83       	std	Y+7, r16	; 0x07
 1d2:	18 87       	std	Y+8, r17	; 0x08
 1d4:	0e 94 49 02 	call	0x492	; 0x492 <__subsf3>
 1d8:	69 83       	std	Y+1, r22	; 0x01
 1da:	7a 83       	std	Y+2, r23	; 0x02
 1dc:	8b 83       	std	Y+3, r24	; 0x03
 1de:	9c 83       	std	Y+4, r25	; 0x04
 1e0:	a6 01       	movw	r20, r12
 1e2:	95 01       	movw	r18, r10
 1e4:	69 8d       	ldd	r22, Y+25	; 0x19
 1e6:	7a 8d       	ldd	r23, Y+26	; 0x1a
 1e8:	8b 8d       	ldd	r24, Y+27	; 0x1b
 1ea:	9c 8d       	ldd	r25, Y+28	; 0x1c
 1ec:	0e 94 49 02 	call	0x492	; 0x492 <__subsf3>
 1f0:	9b 01       	movw	r18, r22
 1f2:	ac 01       	movw	r20, r24
 1f4:	69 81       	ldd	r22, Y+1	; 0x01
 1f6:	7a 81       	ldd	r23, Y+2	; 0x02
 1f8:	8b 81       	ldd	r24, Y+3	; 0x03
 1fa:	9c 81       	ldd	r25, Y+4	; 0x04
 1fc:	0e 94 e5 03 	call	0x7ca	; 0x7ca <__mulsf3>
 200:	69 83       	std	Y+1, r22	; 0x01
 202:	7a 83       	std	Y+2, r23	; 0x02
 204:	8b 83       	std	Y+3, r24	; 0x03
 206:	9c 83       	std	Y+4, r25	; 0x04
 208:	a3 01       	movw	r20, r6
 20a:	92 01       	movw	r18, r4
 20c:	c8 01       	movw	r24, r16
 20e:	b7 01       	movw	r22, r14
 210:	0e 94 49 02 	call	0x492	; 0x492 <__subsf3>
 214:	9b 01       	movw	r18, r22
 216:	ac 01       	movw	r20, r24
 218:	69 81       	ldd	r22, Y+1	; 0x01
 21a:	7a 81       	ldd	r23, Y+2	; 0x02
 21c:	8b 81       	ldd	r24, Y+3	; 0x03
 21e:	9c 81       	ldd	r25, Y+4	; 0x04
 220:	0e 94 b6 02 	call	0x56c	; 0x56c <__divsf3>
 224:	9b 01       	movw	r18, r22
 226:	ac 01       	movw	r20, r24
 228:	c6 01       	movw	r24, r12
 22a:	b5 01       	movw	r22, r10
 22c:	0e 94 4a 02 	call	0x494	; 0x494 <__addsf3>
 230:	28 96       	adiw	r28, 0x08	; 8
 232:	0f b6       	in	r0, 0x3f	; 63
 234:	f8 94       	cli
 236:	de bf       	out	0x3e, r29	; 62
 238:	0f be       	out	0x3f, r0	; 63
 23a:	cd bf       	out	0x3d, r28	; 61
 23c:	df 91       	pop	r29
 23e:	cf 91       	pop	r28
 240:	1f 91       	pop	r17
 242:	0f 91       	pop	r16
 244:	ff 90       	pop	r15
 246:	ef 90       	pop	r14
 248:	df 90       	pop	r13
 24a:	cf 90       	pop	r12
 24c:	bf 90       	pop	r11
 24e:	af 90       	pop	r10
 250:	7f 90       	pop	r7
 252:	6f 90       	pop	r6
 254:	5f 90       	pop	r5
 256:	4f 90       	pop	r4
 258:	08 95       	ret

0000025a <initPWM1A>:
 25a:	94 b1       	in	r25, 0x04	; 4
 25c:	92 60       	ori	r25, 0x02	; 2
 25e:	94 b9       	out	0x04, r25	; 4
 260:	e0 e8       	ldi	r30, 0x80	; 128
 262:	f0 e0       	ldi	r31, 0x00	; 0
 264:	90 81       	ld	r25, Z
 266:	92 60       	ori	r25, 0x02	; 2
 268:	90 83       	st	Z, r25
 26a:	e1 e8       	ldi	r30, 0x81	; 129
 26c:	f0 e0       	ldi	r31, 0x00	; 0
 26e:	90 81       	ld	r25, Z
 270:	98 61       	ori	r25, 0x18	; 24
 272:	90 83       	st	Z, r25
 274:	50 93 87 00 	sts	0x0087, r21	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
 278:	40 93 86 00 	sts	0x0086, r20	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
 27c:	88 23       	and	r24, r24
 27e:	31 f0       	breq	.+12     	; 0x28c <initPWM1A+0x32>
 280:	e0 e8       	ldi	r30, 0x80	; 128
 282:	f0 e0       	ldi	r31, 0x00	; 0
 284:	80 81       	ld	r24, Z
 286:	80 6c       	ori	r24, 0xC0	; 192
 288:	80 83       	st	Z, r24
 28a:	05 c0       	rjmp	.+10     	; 0x296 <initPWM1A+0x3c>
 28c:	e0 e8       	ldi	r30, 0x80	; 128
 28e:	f0 e0       	ldi	r31, 0x00	; 0
 290:	80 81       	ld	r24, Z
 292:	80 68       	ori	r24, 0x80	; 128
 294:	80 83       	st	Z, r24
 296:	68 30       	cpi	r22, 0x08	; 8
 298:	71 05       	cpc	r23, r1
 29a:	31 f4       	brne	.+12     	; 0x2a8 <initPWM1A+0x4e>
 29c:	e1 e8       	ldi	r30, 0x81	; 129
 29e:	f0 e0       	ldi	r31, 0x00	; 0
 2a0:	80 81       	ld	r24, Z
 2a2:	82 60       	ori	r24, 0x02	; 2
 2a4:	80 83       	st	Z, r24
 2a6:	08 95       	ret
 2a8:	e1 e8       	ldi	r30, 0x81	; 129
 2aa:	f0 e0       	ldi	r31, 0x00	; 0
 2ac:	80 81       	ld	r24, Z
 2ae:	84 60       	ori	r24, 0x04	; 4
 2b0:	80 83       	st	Z, r24
 2b2:	08 95       	ret

000002b4 <updateDutyCA1>:
	}
}

void updateDutyCA1(uint8_t duty){//900=0° 2800=90° 48000=180°
 2b4:	af 92       	push	r10
 2b6:	bf 92       	push	r11
 2b8:	cf 92       	push	r12
 2ba:	df 92       	push	r13
 2bc:	ef 92       	push	r14
 2be:	ff 92       	push	r15
 2c0:	0f 93       	push	r16
 2c2:	1f 93       	push	r17
	OCR1A = map(duty,0,255,900,4800);
 2c4:	68 2f       	mov	r22, r24
 2c6:	70 e0       	ldi	r23, 0x00	; 0
 2c8:	80 e0       	ldi	r24, 0x00	; 0
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	0e 94 57 03 	call	0x6ae	; 0x6ae <__floatunsisf>
 2d0:	25 e4       	ldi	r18, 0x45	; 69
 2d2:	2f 93       	push	r18
 2d4:	26 e9       	ldi	r18, 0x96	; 150
 2d6:	2f 93       	push	r18
 2d8:	1f 92       	push	r1
 2da:	1f 92       	push	r1
 2dc:	0f 2e       	mov	r0, r31
 2de:	a1 2c       	mov	r10, r1
 2e0:	b1 2c       	mov	r11, r1
 2e2:	f1 e6       	ldi	r31, 0x61	; 97
 2e4:	cf 2e       	mov	r12, r31
 2e6:	f4 e4       	ldi	r31, 0x44	; 68
 2e8:	df 2e       	mov	r13, r31
 2ea:	f0 2d       	mov	r31, r0
 2ec:	e1 2c       	mov	r14, r1
 2ee:	f1 2c       	mov	r15, r1
 2f0:	0f e7       	ldi	r16, 0x7F	; 127
 2f2:	13 e4       	ldi	r17, 0x43	; 67
 2f4:	20 e0       	ldi	r18, 0x00	; 0
 2f6:	30 e0       	ldi	r19, 0x00	; 0
 2f8:	a9 01       	movw	r20, r18
 2fa:	0e 94 ce 00 	call	0x19c	; 0x19c <map>
 2fe:	0f 90       	pop	r0
 300:	0f 90       	pop	r0
 302:	0f 90       	pop	r0
 304:	0f 90       	pop	r0
 306:	0e 94 28 03 	call	0x650	; 0x650 <__fixunssfsi>
 30a:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 30e:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
}
 312:	1f 91       	pop	r17
 314:	0f 91       	pop	r16
 316:	ff 90       	pop	r15
 318:	ef 90       	pop	r14
 31a:	df 90       	pop	r13
 31c:	cf 90       	pop	r12
 31e:	bf 90       	pop	r11
 320:	af 90       	pop	r10
 322:	08 95       	ret

00000324 <map1>:
	}

	if (prescaler == 1024) {
		TCCR2B |= (1 << CS22)|(1 << CS21)|(1 << CS20);
		} else {
		TCCR2B |= (1 << CS20);
 324:	4f 92       	push	r4
 326:	5f 92       	push	r5
 328:	6f 92       	push	r6
 32a:	7f 92       	push	r7
 32c:	af 92       	push	r10
 32e:	bf 92       	push	r11
 330:	cf 92       	push	r12
 332:	df 92       	push	r13
 334:	ef 92       	push	r14
 336:	ff 92       	push	r15
 338:	0f 93       	push	r16
 33a:	1f 93       	push	r17
 33c:	cf 93       	push	r28
 33e:	df 93       	push	r29
 340:	cd b7       	in	r28, 0x3d	; 61
 342:	de b7       	in	r29, 0x3e	; 62
 344:	28 97       	sbiw	r28, 0x08	; 8
 346:	0f b6       	in	r0, 0x3f	; 63
 348:	f8 94       	cli
 34a:	de bf       	out	0x3e, r29	; 62
 34c:	0f be       	out	0x3f, r0	; 63
 34e:	cd bf       	out	0x3d, r28	; 61
 350:	29 01       	movw	r4, r18
 352:	3a 01       	movw	r6, r20
 354:	ed 82       	std	Y+5, r14	; 0x05
 356:	fe 82       	std	Y+6, r15	; 0x06
 358:	0f 83       	std	Y+7, r16	; 0x07
 35a:	18 87       	std	Y+8, r17	; 0x08
 35c:	0e 94 49 02 	call	0x492	; 0x492 <__subsf3>
 360:	69 83       	std	Y+1, r22	; 0x01
 362:	7a 83       	std	Y+2, r23	; 0x02
 364:	8b 83       	std	Y+3, r24	; 0x03
 366:	9c 83       	std	Y+4, r25	; 0x04
 368:	a6 01       	movw	r20, r12
 36a:	95 01       	movw	r18, r10
 36c:	69 8d       	ldd	r22, Y+25	; 0x19
 36e:	7a 8d       	ldd	r23, Y+26	; 0x1a
 370:	8b 8d       	ldd	r24, Y+27	; 0x1b
 372:	9c 8d       	ldd	r25, Y+28	; 0x1c
 374:	0e 94 49 02 	call	0x492	; 0x492 <__subsf3>
 378:	9b 01       	movw	r18, r22
 37a:	ac 01       	movw	r20, r24
 37c:	69 81       	ldd	r22, Y+1	; 0x01
 37e:	7a 81       	ldd	r23, Y+2	; 0x02
 380:	8b 81       	ldd	r24, Y+3	; 0x03
 382:	9c 81       	ldd	r25, Y+4	; 0x04
 384:	0e 94 e5 03 	call	0x7ca	; 0x7ca <__mulsf3>
 388:	69 83       	std	Y+1, r22	; 0x01
 38a:	7a 83       	std	Y+2, r23	; 0x02
 38c:	8b 83       	std	Y+3, r24	; 0x03
 38e:	9c 83       	std	Y+4, r25	; 0x04
 390:	a3 01       	movw	r20, r6
 392:	92 01       	movw	r18, r4
 394:	c8 01       	movw	r24, r16
 396:	b7 01       	movw	r22, r14
 398:	0e 94 49 02 	call	0x492	; 0x492 <__subsf3>
 39c:	9b 01       	movw	r18, r22
 39e:	ac 01       	movw	r20, r24
 3a0:	69 81       	ldd	r22, Y+1	; 0x01
 3a2:	7a 81       	ldd	r23, Y+2	; 0x02
 3a4:	8b 81       	ldd	r24, Y+3	; 0x03
 3a6:	9c 81       	ldd	r25, Y+4	; 0x04
 3a8:	0e 94 b6 02 	call	0x56c	; 0x56c <__divsf3>
 3ac:	9b 01       	movw	r18, r22
 3ae:	ac 01       	movw	r20, r24
 3b0:	c6 01       	movw	r24, r12
 3b2:	b5 01       	movw	r22, r10
 3b4:	0e 94 4a 02 	call	0x494	; 0x494 <__addsf3>
 3b8:	28 96       	adiw	r28, 0x08	; 8
 3ba:	0f b6       	in	r0, 0x3f	; 63
 3bc:	f8 94       	cli
 3be:	de bf       	out	0x3e, r29	; 62
 3c0:	0f be       	out	0x3f, r0	; 63
 3c2:	cd bf       	out	0x3d, r28	; 61
 3c4:	df 91       	pop	r29
 3c6:	cf 91       	pop	r28
 3c8:	1f 91       	pop	r17
 3ca:	0f 91       	pop	r16
 3cc:	ff 90       	pop	r15
 3ce:	ef 90       	pop	r14
 3d0:	df 90       	pop	r13
 3d2:	cf 90       	pop	r12
 3d4:	bf 90       	pop	r11
 3d6:	af 90       	pop	r10
 3d8:	7f 90       	pop	r7
 3da:	6f 90       	pop	r6
 3dc:	5f 90       	pop	r5
 3de:	4f 90       	pop	r4
 3e0:	08 95       	ret

000003e2 <initPWM2A>:
 3e2:	94 b1       	in	r25, 0x04	; 4
 3e4:	98 60       	ori	r25, 0x08	; 8
 3e6:	94 b9       	out	0x04, r25	; 4
 3e8:	e0 eb       	ldi	r30, 0xB0	; 176
 3ea:	f0 e0       	ldi	r31, 0x00	; 0
 3ec:	90 81       	ld	r25, Z
 3ee:	93 60       	ori	r25, 0x03	; 3
 3f0:	90 83       	st	Z, r25
 3f2:	88 23       	and	r24, r24
 3f4:	21 f0       	breq	.+8      	; 0x3fe <initPWM2A+0x1c>
 3f6:	80 81       	ld	r24, Z
 3f8:	80 6c       	ori	r24, 0xC0	; 192
 3fa:	80 83       	st	Z, r24
 3fc:	05 c0       	rjmp	.+10     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 3fe:	e0 eb       	ldi	r30, 0xB0	; 176
 400:	f0 e0       	ldi	r31, 0x00	; 0
 402:	80 81       	ld	r24, Z
 404:	80 68       	ori	r24, 0x80	; 128
 406:	80 83       	st	Z, r24
 408:	61 15       	cp	r22, r1
 40a:	74 40       	sbci	r23, 0x04	; 4
 40c:	31 f4       	brne	.+12     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 40e:	e1 eb       	ldi	r30, 0xB1	; 177
 410:	f0 e0       	ldi	r31, 0x00	; 0
 412:	80 81       	ld	r24, Z
 414:	87 60       	ori	r24, 0x07	; 7
 416:	80 83       	st	Z, r24
 418:	08 95       	ret
 41a:	e1 eb       	ldi	r30, 0xB1	; 177
 41c:	f0 e0       	ldi	r31, 0x00	; 0
 41e:	80 81       	ld	r24, Z
 420:	81 60       	ori	r24, 0x01	; 1
 422:	80 83       	st	Z, r24
 424:	08 95       	ret

00000426 <updateDutyCA2>:
	}
}

void updateDutyCA2(uint8_t duty){
 426:	af 92       	push	r10
 428:	bf 92       	push	r11
 42a:	cf 92       	push	r12
 42c:	df 92       	push	r13
 42e:	ef 92       	push	r14
 430:	ff 92       	push	r15
 432:	0f 93       	push	r16
 434:	1f 93       	push	r17
	OCR2A = map1(duty,0,255,6,36);
 436:	68 2f       	mov	r22, r24
 438:	70 e0       	ldi	r23, 0x00	; 0
 43a:	80 e0       	ldi	r24, 0x00	; 0
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	0e 94 57 03 	call	0x6ae	; 0x6ae <__floatunsisf>
 442:	22 e4       	ldi	r18, 0x42	; 66
 444:	2f 93       	push	r18
 446:	20 e1       	ldi	r18, 0x10	; 16
 448:	2f 93       	push	r18
 44a:	1f 92       	push	r1
 44c:	1f 92       	push	r1
 44e:	0f 2e       	mov	r0, r31
 450:	a1 2c       	mov	r10, r1
 452:	b1 2c       	mov	r11, r1
 454:	f0 ec       	ldi	r31, 0xC0	; 192
 456:	cf 2e       	mov	r12, r31
 458:	f0 e4       	ldi	r31, 0x40	; 64
 45a:	df 2e       	mov	r13, r31
 45c:	f0 2d       	mov	r31, r0
 45e:	e1 2c       	mov	r14, r1
 460:	f1 2c       	mov	r15, r1
 462:	0f e7       	ldi	r16, 0x7F	; 127
 464:	13 e4       	ldi	r17, 0x43	; 67
 466:	20 e0       	ldi	r18, 0x00	; 0
 468:	30 e0       	ldi	r19, 0x00	; 0
 46a:	a9 01       	movw	r20, r18
 46c:	0e 94 92 01 	call	0x324	; 0x324 <map1>
 470:	0f 90       	pop	r0
 472:	0f 90       	pop	r0
 474:	0f 90       	pop	r0
 476:	0f 90       	pop	r0
 478:	0e 94 28 03 	call	0x650	; 0x650 <__fixunssfsi>
 47c:	60 93 b3 00 	sts	0x00B3, r22	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
}
 480:	1f 91       	pop	r17
 482:	0f 91       	pop	r16
 484:	ff 90       	pop	r15
 486:	ef 90       	pop	r14
 488:	df 90       	pop	r13
 48a:	cf 90       	pop	r12
 48c:	bf 90       	pop	r11
 48e:	af 90       	pop	r10
 490:	08 95       	ret

00000492 <__subsf3>:
 492:	50 58       	subi	r21, 0x80	; 128

00000494 <__addsf3>:
 494:	bb 27       	eor	r27, r27
 496:	aa 27       	eor	r26, r26
 498:	0e 94 61 02 	call	0x4c2	; 0x4c2 <__addsf3x>
 49c:	0c 94 ab 03 	jmp	0x756	; 0x756 <__fp_round>
 4a0:	0e 94 9d 03 	call	0x73a	; 0x73a <__fp_pscA>
 4a4:	38 f0       	brcs	.+14     	; 0x4b4 <__addsf3+0x20>
 4a6:	0e 94 a4 03 	call	0x748	; 0x748 <__fp_pscB>
 4aa:	20 f0       	brcs	.+8      	; 0x4b4 <__addsf3+0x20>
 4ac:	39 f4       	brne	.+14     	; 0x4bc <__addsf3+0x28>
 4ae:	9f 3f       	cpi	r25, 0xFF	; 255
 4b0:	19 f4       	brne	.+6      	; 0x4b8 <__addsf3+0x24>
 4b2:	26 f4       	brtc	.+8      	; 0x4bc <__addsf3+0x28>
 4b4:	0c 94 9a 03 	jmp	0x734	; 0x734 <__fp_nan>
 4b8:	0e f4       	brtc	.+2      	; 0x4bc <__addsf3+0x28>
 4ba:	e0 95       	com	r30
 4bc:	e7 fb       	bst	r30, 7
 4be:	0c 94 94 03 	jmp	0x728	; 0x728 <__fp_inf>

000004c2 <__addsf3x>:
 4c2:	e9 2f       	mov	r30, r25
 4c4:	0e 94 bc 03 	call	0x778	; 0x778 <__fp_split3>
 4c8:	58 f3       	brcs	.-42     	; 0x4a0 <__addsf3+0xc>
 4ca:	ba 17       	cp	r27, r26
 4cc:	62 07       	cpc	r22, r18
 4ce:	73 07       	cpc	r23, r19
 4d0:	84 07       	cpc	r24, r20
 4d2:	95 07       	cpc	r25, r21
 4d4:	20 f0       	brcs	.+8      	; 0x4de <__addsf3x+0x1c>
 4d6:	79 f4       	brne	.+30     	; 0x4f6 <__addsf3x+0x34>
 4d8:	a6 f5       	brtc	.+104    	; 0x542 <__addsf3x+0x80>
 4da:	0c 94 de 03 	jmp	0x7bc	; 0x7bc <__fp_zero>
 4de:	0e f4       	brtc	.+2      	; 0x4e2 <__addsf3x+0x20>
 4e0:	e0 95       	com	r30
 4e2:	0b 2e       	mov	r0, r27
 4e4:	ba 2f       	mov	r27, r26
 4e6:	a0 2d       	mov	r26, r0
 4e8:	0b 01       	movw	r0, r22
 4ea:	b9 01       	movw	r22, r18
 4ec:	90 01       	movw	r18, r0
 4ee:	0c 01       	movw	r0, r24
 4f0:	ca 01       	movw	r24, r20
 4f2:	a0 01       	movw	r20, r0
 4f4:	11 24       	eor	r1, r1
 4f6:	ff 27       	eor	r31, r31
 4f8:	59 1b       	sub	r21, r25
 4fa:	99 f0       	breq	.+38     	; 0x522 <__addsf3x+0x60>
 4fc:	59 3f       	cpi	r21, 0xF9	; 249
 4fe:	50 f4       	brcc	.+20     	; 0x514 <__addsf3x+0x52>
 500:	50 3e       	cpi	r21, 0xE0	; 224
 502:	68 f1       	brcs	.+90     	; 0x55e <__addsf3x+0x9c>
 504:	1a 16       	cp	r1, r26
 506:	f0 40       	sbci	r31, 0x00	; 0
 508:	a2 2f       	mov	r26, r18
 50a:	23 2f       	mov	r18, r19
 50c:	34 2f       	mov	r19, r20
 50e:	44 27       	eor	r20, r20
 510:	58 5f       	subi	r21, 0xF8	; 248
 512:	f3 cf       	rjmp	.-26     	; 0x4fa <__addsf3x+0x38>
 514:	46 95       	lsr	r20
 516:	37 95       	ror	r19
 518:	27 95       	ror	r18
 51a:	a7 95       	ror	r26
 51c:	f0 40       	sbci	r31, 0x00	; 0
 51e:	53 95       	inc	r21
 520:	c9 f7       	brne	.-14     	; 0x514 <__addsf3x+0x52>
 522:	7e f4       	brtc	.+30     	; 0x542 <__addsf3x+0x80>
 524:	1f 16       	cp	r1, r31
 526:	ba 0b       	sbc	r27, r26
 528:	62 0b       	sbc	r22, r18
 52a:	73 0b       	sbc	r23, r19
 52c:	84 0b       	sbc	r24, r20
 52e:	ba f0       	brmi	.+46     	; 0x55e <__addsf3x+0x9c>
 530:	91 50       	subi	r25, 0x01	; 1
 532:	a1 f0       	breq	.+40     	; 0x55c <__addsf3x+0x9a>
 534:	ff 0f       	add	r31, r31
 536:	bb 1f       	adc	r27, r27
 538:	66 1f       	adc	r22, r22
 53a:	77 1f       	adc	r23, r23
 53c:	88 1f       	adc	r24, r24
 53e:	c2 f7       	brpl	.-16     	; 0x530 <__addsf3x+0x6e>
 540:	0e c0       	rjmp	.+28     	; 0x55e <__addsf3x+0x9c>
 542:	ba 0f       	add	r27, r26
 544:	62 1f       	adc	r22, r18
 546:	73 1f       	adc	r23, r19
 548:	84 1f       	adc	r24, r20
 54a:	48 f4       	brcc	.+18     	; 0x55e <__addsf3x+0x9c>
 54c:	87 95       	ror	r24
 54e:	77 95       	ror	r23
 550:	67 95       	ror	r22
 552:	b7 95       	ror	r27
 554:	f7 95       	ror	r31
 556:	9e 3f       	cpi	r25, 0xFE	; 254
 558:	08 f0       	brcs	.+2      	; 0x55c <__addsf3x+0x9a>
 55a:	b0 cf       	rjmp	.-160    	; 0x4bc <__addsf3+0x28>
 55c:	93 95       	inc	r25
 55e:	88 0f       	add	r24, r24
 560:	08 f0       	brcs	.+2      	; 0x564 <__addsf3x+0xa2>
 562:	99 27       	eor	r25, r25
 564:	ee 0f       	add	r30, r30
 566:	97 95       	ror	r25
 568:	87 95       	ror	r24
 56a:	08 95       	ret

0000056c <__divsf3>:
 56c:	0e 94 ca 02 	call	0x594	; 0x594 <__divsf3x>
 570:	0c 94 ab 03 	jmp	0x756	; 0x756 <__fp_round>
 574:	0e 94 a4 03 	call	0x748	; 0x748 <__fp_pscB>
 578:	58 f0       	brcs	.+22     	; 0x590 <__divsf3+0x24>
 57a:	0e 94 9d 03 	call	0x73a	; 0x73a <__fp_pscA>
 57e:	40 f0       	brcs	.+16     	; 0x590 <__divsf3+0x24>
 580:	29 f4       	brne	.+10     	; 0x58c <__divsf3+0x20>
 582:	5f 3f       	cpi	r21, 0xFF	; 255
 584:	29 f0       	breq	.+10     	; 0x590 <__divsf3+0x24>
 586:	0c 94 94 03 	jmp	0x728	; 0x728 <__fp_inf>
 58a:	51 11       	cpse	r21, r1
 58c:	0c 94 df 03 	jmp	0x7be	; 0x7be <__fp_szero>
 590:	0c 94 9a 03 	jmp	0x734	; 0x734 <__fp_nan>

00000594 <__divsf3x>:
 594:	0e 94 bc 03 	call	0x778	; 0x778 <__fp_split3>
 598:	68 f3       	brcs	.-38     	; 0x574 <__divsf3+0x8>

0000059a <__divsf3_pse>:
 59a:	99 23       	and	r25, r25
 59c:	b1 f3       	breq	.-20     	; 0x58a <__divsf3+0x1e>
 59e:	55 23       	and	r21, r21
 5a0:	91 f3       	breq	.-28     	; 0x586 <__divsf3+0x1a>
 5a2:	95 1b       	sub	r25, r21
 5a4:	55 0b       	sbc	r21, r21
 5a6:	bb 27       	eor	r27, r27
 5a8:	aa 27       	eor	r26, r26
 5aa:	62 17       	cp	r22, r18
 5ac:	73 07       	cpc	r23, r19
 5ae:	84 07       	cpc	r24, r20
 5b0:	38 f0       	brcs	.+14     	; 0x5c0 <__divsf3_pse+0x26>
 5b2:	9f 5f       	subi	r25, 0xFF	; 255
 5b4:	5f 4f       	sbci	r21, 0xFF	; 255
 5b6:	22 0f       	add	r18, r18
 5b8:	33 1f       	adc	r19, r19
 5ba:	44 1f       	adc	r20, r20
 5bc:	aa 1f       	adc	r26, r26
 5be:	a9 f3       	breq	.-22     	; 0x5aa <__divsf3_pse+0x10>
 5c0:	35 d0       	rcall	.+106    	; 0x62c <__divsf3_pse+0x92>
 5c2:	0e 2e       	mov	r0, r30
 5c4:	3a f0       	brmi	.+14     	; 0x5d4 <__divsf3_pse+0x3a>
 5c6:	e0 e8       	ldi	r30, 0x80	; 128
 5c8:	32 d0       	rcall	.+100    	; 0x62e <__divsf3_pse+0x94>
 5ca:	91 50       	subi	r25, 0x01	; 1
 5cc:	50 40       	sbci	r21, 0x00	; 0
 5ce:	e6 95       	lsr	r30
 5d0:	00 1c       	adc	r0, r0
 5d2:	ca f7       	brpl	.-14     	; 0x5c6 <__divsf3_pse+0x2c>
 5d4:	2b d0       	rcall	.+86     	; 0x62c <__divsf3_pse+0x92>
 5d6:	fe 2f       	mov	r31, r30
 5d8:	29 d0       	rcall	.+82     	; 0x62c <__divsf3_pse+0x92>
 5da:	66 0f       	add	r22, r22
 5dc:	77 1f       	adc	r23, r23
 5de:	88 1f       	adc	r24, r24
 5e0:	bb 1f       	adc	r27, r27
 5e2:	26 17       	cp	r18, r22
 5e4:	37 07       	cpc	r19, r23
 5e6:	48 07       	cpc	r20, r24
 5e8:	ab 07       	cpc	r26, r27
 5ea:	b0 e8       	ldi	r27, 0x80	; 128
 5ec:	09 f0       	breq	.+2      	; 0x5f0 <__divsf3_pse+0x56>
 5ee:	bb 0b       	sbc	r27, r27
 5f0:	80 2d       	mov	r24, r0
 5f2:	bf 01       	movw	r22, r30
 5f4:	ff 27       	eor	r31, r31
 5f6:	93 58       	subi	r25, 0x83	; 131
 5f8:	5f 4f       	sbci	r21, 0xFF	; 255
 5fa:	3a f0       	brmi	.+14     	; 0x60a <__divsf3_pse+0x70>
 5fc:	9e 3f       	cpi	r25, 0xFE	; 254
 5fe:	51 05       	cpc	r21, r1
 600:	78 f0       	brcs	.+30     	; 0x620 <__divsf3_pse+0x86>
 602:	0c 94 94 03 	jmp	0x728	; 0x728 <__fp_inf>
 606:	0c 94 df 03 	jmp	0x7be	; 0x7be <__fp_szero>
 60a:	5f 3f       	cpi	r21, 0xFF	; 255
 60c:	e4 f3       	brlt	.-8      	; 0x606 <__divsf3_pse+0x6c>
 60e:	98 3e       	cpi	r25, 0xE8	; 232
 610:	d4 f3       	brlt	.-12     	; 0x606 <__divsf3_pse+0x6c>
 612:	86 95       	lsr	r24
 614:	77 95       	ror	r23
 616:	67 95       	ror	r22
 618:	b7 95       	ror	r27
 61a:	f7 95       	ror	r31
 61c:	9f 5f       	subi	r25, 0xFF	; 255
 61e:	c9 f7       	brne	.-14     	; 0x612 <__divsf3_pse+0x78>
 620:	88 0f       	add	r24, r24
 622:	91 1d       	adc	r25, r1
 624:	96 95       	lsr	r25
 626:	87 95       	ror	r24
 628:	97 f9       	bld	r25, 7
 62a:	08 95       	ret
 62c:	e1 e0       	ldi	r30, 0x01	; 1
 62e:	66 0f       	add	r22, r22
 630:	77 1f       	adc	r23, r23
 632:	88 1f       	adc	r24, r24
 634:	bb 1f       	adc	r27, r27
 636:	62 17       	cp	r22, r18
 638:	73 07       	cpc	r23, r19
 63a:	84 07       	cpc	r24, r20
 63c:	ba 07       	cpc	r27, r26
 63e:	20 f0       	brcs	.+8      	; 0x648 <__divsf3_pse+0xae>
 640:	62 1b       	sub	r22, r18
 642:	73 0b       	sbc	r23, r19
 644:	84 0b       	sbc	r24, r20
 646:	ba 0b       	sbc	r27, r26
 648:	ee 1f       	adc	r30, r30
 64a:	88 f7       	brcc	.-30     	; 0x62e <__divsf3_pse+0x94>
 64c:	e0 95       	com	r30
 64e:	08 95       	ret

00000650 <__fixunssfsi>:
 650:	0e 94 c4 03 	call	0x788	; 0x788 <__fp_splitA>
 654:	88 f0       	brcs	.+34     	; 0x678 <__fixunssfsi+0x28>
 656:	9f 57       	subi	r25, 0x7F	; 127
 658:	98 f0       	brcs	.+38     	; 0x680 <__fixunssfsi+0x30>
 65a:	b9 2f       	mov	r27, r25
 65c:	99 27       	eor	r25, r25
 65e:	b7 51       	subi	r27, 0x17	; 23
 660:	b0 f0       	brcs	.+44     	; 0x68e <__fixunssfsi+0x3e>
 662:	e1 f0       	breq	.+56     	; 0x69c <__fixunssfsi+0x4c>
 664:	66 0f       	add	r22, r22
 666:	77 1f       	adc	r23, r23
 668:	88 1f       	adc	r24, r24
 66a:	99 1f       	adc	r25, r25
 66c:	1a f0       	brmi	.+6      	; 0x674 <__fixunssfsi+0x24>
 66e:	ba 95       	dec	r27
 670:	c9 f7       	brne	.-14     	; 0x664 <__fixunssfsi+0x14>
 672:	14 c0       	rjmp	.+40     	; 0x69c <__fixunssfsi+0x4c>
 674:	b1 30       	cpi	r27, 0x01	; 1
 676:	91 f0       	breq	.+36     	; 0x69c <__fixunssfsi+0x4c>
 678:	0e 94 de 03 	call	0x7bc	; 0x7bc <__fp_zero>
 67c:	b1 e0       	ldi	r27, 0x01	; 1
 67e:	08 95       	ret
 680:	0c 94 de 03 	jmp	0x7bc	; 0x7bc <__fp_zero>
 684:	67 2f       	mov	r22, r23
 686:	78 2f       	mov	r23, r24
 688:	88 27       	eor	r24, r24
 68a:	b8 5f       	subi	r27, 0xF8	; 248
 68c:	39 f0       	breq	.+14     	; 0x69c <__fixunssfsi+0x4c>
 68e:	b9 3f       	cpi	r27, 0xF9	; 249
 690:	cc f3       	brlt	.-14     	; 0x684 <__fixunssfsi+0x34>
 692:	86 95       	lsr	r24
 694:	77 95       	ror	r23
 696:	67 95       	ror	r22
 698:	b3 95       	inc	r27
 69a:	d9 f7       	brne	.-10     	; 0x692 <__fixunssfsi+0x42>
 69c:	3e f4       	brtc	.+14     	; 0x6ac <__fixunssfsi+0x5c>
 69e:	90 95       	com	r25
 6a0:	80 95       	com	r24
 6a2:	70 95       	com	r23
 6a4:	61 95       	neg	r22
 6a6:	7f 4f       	sbci	r23, 0xFF	; 255
 6a8:	8f 4f       	sbci	r24, 0xFF	; 255
 6aa:	9f 4f       	sbci	r25, 0xFF	; 255
 6ac:	08 95       	ret

000006ae <__floatunsisf>:
 6ae:	e8 94       	clt
 6b0:	09 c0       	rjmp	.+18     	; 0x6c4 <__floatsisf+0x12>

000006b2 <__floatsisf>:
 6b2:	97 fb       	bst	r25, 7
 6b4:	3e f4       	brtc	.+14     	; 0x6c4 <__floatsisf+0x12>
 6b6:	90 95       	com	r25
 6b8:	80 95       	com	r24
 6ba:	70 95       	com	r23
 6bc:	61 95       	neg	r22
 6be:	7f 4f       	sbci	r23, 0xFF	; 255
 6c0:	8f 4f       	sbci	r24, 0xFF	; 255
 6c2:	9f 4f       	sbci	r25, 0xFF	; 255
 6c4:	99 23       	and	r25, r25
 6c6:	a9 f0       	breq	.+42     	; 0x6f2 <__floatsisf+0x40>
 6c8:	f9 2f       	mov	r31, r25
 6ca:	96 e9       	ldi	r25, 0x96	; 150
 6cc:	bb 27       	eor	r27, r27
 6ce:	93 95       	inc	r25
 6d0:	f6 95       	lsr	r31
 6d2:	87 95       	ror	r24
 6d4:	77 95       	ror	r23
 6d6:	67 95       	ror	r22
 6d8:	b7 95       	ror	r27
 6da:	f1 11       	cpse	r31, r1
 6dc:	f8 cf       	rjmp	.-16     	; 0x6ce <__floatsisf+0x1c>
 6de:	fa f4       	brpl	.+62     	; 0x71e <__floatsisf+0x6c>
 6e0:	bb 0f       	add	r27, r27
 6e2:	11 f4       	brne	.+4      	; 0x6e8 <__floatsisf+0x36>
 6e4:	60 ff       	sbrs	r22, 0
 6e6:	1b c0       	rjmp	.+54     	; 0x71e <__floatsisf+0x6c>
 6e8:	6f 5f       	subi	r22, 0xFF	; 255
 6ea:	7f 4f       	sbci	r23, 0xFF	; 255
 6ec:	8f 4f       	sbci	r24, 0xFF	; 255
 6ee:	9f 4f       	sbci	r25, 0xFF	; 255
 6f0:	16 c0       	rjmp	.+44     	; 0x71e <__floatsisf+0x6c>
 6f2:	88 23       	and	r24, r24
 6f4:	11 f0       	breq	.+4      	; 0x6fa <__floatsisf+0x48>
 6f6:	96 e9       	ldi	r25, 0x96	; 150
 6f8:	11 c0       	rjmp	.+34     	; 0x71c <__floatsisf+0x6a>
 6fa:	77 23       	and	r23, r23
 6fc:	21 f0       	breq	.+8      	; 0x706 <__floatsisf+0x54>
 6fe:	9e e8       	ldi	r25, 0x8E	; 142
 700:	87 2f       	mov	r24, r23
 702:	76 2f       	mov	r23, r22
 704:	05 c0       	rjmp	.+10     	; 0x710 <__floatsisf+0x5e>
 706:	66 23       	and	r22, r22
 708:	71 f0       	breq	.+28     	; 0x726 <__floatsisf+0x74>
 70a:	96 e8       	ldi	r25, 0x86	; 134
 70c:	86 2f       	mov	r24, r22
 70e:	70 e0       	ldi	r23, 0x00	; 0
 710:	60 e0       	ldi	r22, 0x00	; 0
 712:	2a f0       	brmi	.+10     	; 0x71e <__floatsisf+0x6c>
 714:	9a 95       	dec	r25
 716:	66 0f       	add	r22, r22
 718:	77 1f       	adc	r23, r23
 71a:	88 1f       	adc	r24, r24
 71c:	da f7       	brpl	.-10     	; 0x714 <__floatsisf+0x62>
 71e:	88 0f       	add	r24, r24
 720:	96 95       	lsr	r25
 722:	87 95       	ror	r24
 724:	97 f9       	bld	r25, 7
 726:	08 95       	ret

00000728 <__fp_inf>:
 728:	97 f9       	bld	r25, 7
 72a:	9f 67       	ori	r25, 0x7F	; 127
 72c:	80 e8       	ldi	r24, 0x80	; 128
 72e:	70 e0       	ldi	r23, 0x00	; 0
 730:	60 e0       	ldi	r22, 0x00	; 0
 732:	08 95       	ret

00000734 <__fp_nan>:
 734:	9f ef       	ldi	r25, 0xFF	; 255
 736:	80 ec       	ldi	r24, 0xC0	; 192
 738:	08 95       	ret

0000073a <__fp_pscA>:
 73a:	00 24       	eor	r0, r0
 73c:	0a 94       	dec	r0
 73e:	16 16       	cp	r1, r22
 740:	17 06       	cpc	r1, r23
 742:	18 06       	cpc	r1, r24
 744:	09 06       	cpc	r0, r25
 746:	08 95       	ret

00000748 <__fp_pscB>:
 748:	00 24       	eor	r0, r0
 74a:	0a 94       	dec	r0
 74c:	12 16       	cp	r1, r18
 74e:	13 06       	cpc	r1, r19
 750:	14 06       	cpc	r1, r20
 752:	05 06       	cpc	r0, r21
 754:	08 95       	ret

00000756 <__fp_round>:
 756:	09 2e       	mov	r0, r25
 758:	03 94       	inc	r0
 75a:	00 0c       	add	r0, r0
 75c:	11 f4       	brne	.+4      	; 0x762 <__fp_round+0xc>
 75e:	88 23       	and	r24, r24
 760:	52 f0       	brmi	.+20     	; 0x776 <__fp_round+0x20>
 762:	bb 0f       	add	r27, r27
 764:	40 f4       	brcc	.+16     	; 0x776 <__fp_round+0x20>
 766:	bf 2b       	or	r27, r31
 768:	11 f4       	brne	.+4      	; 0x76e <__fp_round+0x18>
 76a:	60 ff       	sbrs	r22, 0
 76c:	04 c0       	rjmp	.+8      	; 0x776 <__fp_round+0x20>
 76e:	6f 5f       	subi	r22, 0xFF	; 255
 770:	7f 4f       	sbci	r23, 0xFF	; 255
 772:	8f 4f       	sbci	r24, 0xFF	; 255
 774:	9f 4f       	sbci	r25, 0xFF	; 255
 776:	08 95       	ret

00000778 <__fp_split3>:
 778:	57 fd       	sbrc	r21, 7
 77a:	90 58       	subi	r25, 0x80	; 128
 77c:	44 0f       	add	r20, r20
 77e:	55 1f       	adc	r21, r21
 780:	59 f0       	breq	.+22     	; 0x798 <__fp_splitA+0x10>
 782:	5f 3f       	cpi	r21, 0xFF	; 255
 784:	71 f0       	breq	.+28     	; 0x7a2 <__fp_splitA+0x1a>
 786:	47 95       	ror	r20

00000788 <__fp_splitA>:
 788:	88 0f       	add	r24, r24
 78a:	97 fb       	bst	r25, 7
 78c:	99 1f       	adc	r25, r25
 78e:	61 f0       	breq	.+24     	; 0x7a8 <__fp_splitA+0x20>
 790:	9f 3f       	cpi	r25, 0xFF	; 255
 792:	79 f0       	breq	.+30     	; 0x7b2 <__fp_splitA+0x2a>
 794:	87 95       	ror	r24
 796:	08 95       	ret
 798:	12 16       	cp	r1, r18
 79a:	13 06       	cpc	r1, r19
 79c:	14 06       	cpc	r1, r20
 79e:	55 1f       	adc	r21, r21
 7a0:	f2 cf       	rjmp	.-28     	; 0x786 <__fp_split3+0xe>
 7a2:	46 95       	lsr	r20
 7a4:	f1 df       	rcall	.-30     	; 0x788 <__fp_splitA>
 7a6:	08 c0       	rjmp	.+16     	; 0x7b8 <__fp_splitA+0x30>
 7a8:	16 16       	cp	r1, r22
 7aa:	17 06       	cpc	r1, r23
 7ac:	18 06       	cpc	r1, r24
 7ae:	99 1f       	adc	r25, r25
 7b0:	f1 cf       	rjmp	.-30     	; 0x794 <__fp_splitA+0xc>
 7b2:	86 95       	lsr	r24
 7b4:	71 05       	cpc	r23, r1
 7b6:	61 05       	cpc	r22, r1
 7b8:	08 94       	sec
 7ba:	08 95       	ret

000007bc <__fp_zero>:
 7bc:	e8 94       	clt

000007be <__fp_szero>:
 7be:	bb 27       	eor	r27, r27
 7c0:	66 27       	eor	r22, r22
 7c2:	77 27       	eor	r23, r23
 7c4:	cb 01       	movw	r24, r22
 7c6:	97 f9       	bld	r25, 7
 7c8:	08 95       	ret

000007ca <__mulsf3>:
 7ca:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <__mulsf3x>
 7ce:	0c 94 ab 03 	jmp	0x756	; 0x756 <__fp_round>
 7d2:	0e 94 9d 03 	call	0x73a	; 0x73a <__fp_pscA>
 7d6:	38 f0       	brcs	.+14     	; 0x7e6 <__mulsf3+0x1c>
 7d8:	0e 94 a4 03 	call	0x748	; 0x748 <__fp_pscB>
 7dc:	20 f0       	brcs	.+8      	; 0x7e6 <__mulsf3+0x1c>
 7de:	95 23       	and	r25, r21
 7e0:	11 f0       	breq	.+4      	; 0x7e6 <__mulsf3+0x1c>
 7e2:	0c 94 94 03 	jmp	0x728	; 0x728 <__fp_inf>
 7e6:	0c 94 9a 03 	jmp	0x734	; 0x734 <__fp_nan>
 7ea:	11 24       	eor	r1, r1
 7ec:	0c 94 df 03 	jmp	0x7be	; 0x7be <__fp_szero>

000007f0 <__mulsf3x>:
 7f0:	0e 94 bc 03 	call	0x778	; 0x778 <__fp_split3>
 7f4:	70 f3       	brcs	.-36     	; 0x7d2 <__mulsf3+0x8>

000007f6 <__mulsf3_pse>:
 7f6:	95 9f       	mul	r25, r21
 7f8:	c1 f3       	breq	.-16     	; 0x7ea <__mulsf3+0x20>
 7fa:	95 0f       	add	r25, r21
 7fc:	50 e0       	ldi	r21, 0x00	; 0
 7fe:	55 1f       	adc	r21, r21
 800:	62 9f       	mul	r22, r18
 802:	f0 01       	movw	r30, r0
 804:	72 9f       	mul	r23, r18
 806:	bb 27       	eor	r27, r27
 808:	f0 0d       	add	r31, r0
 80a:	b1 1d       	adc	r27, r1
 80c:	63 9f       	mul	r22, r19
 80e:	aa 27       	eor	r26, r26
 810:	f0 0d       	add	r31, r0
 812:	b1 1d       	adc	r27, r1
 814:	aa 1f       	adc	r26, r26
 816:	64 9f       	mul	r22, r20
 818:	66 27       	eor	r22, r22
 81a:	b0 0d       	add	r27, r0
 81c:	a1 1d       	adc	r26, r1
 81e:	66 1f       	adc	r22, r22
 820:	82 9f       	mul	r24, r18
 822:	22 27       	eor	r18, r18
 824:	b0 0d       	add	r27, r0
 826:	a1 1d       	adc	r26, r1
 828:	62 1f       	adc	r22, r18
 82a:	73 9f       	mul	r23, r19
 82c:	b0 0d       	add	r27, r0
 82e:	a1 1d       	adc	r26, r1
 830:	62 1f       	adc	r22, r18
 832:	83 9f       	mul	r24, r19
 834:	a0 0d       	add	r26, r0
 836:	61 1d       	adc	r22, r1
 838:	22 1f       	adc	r18, r18
 83a:	74 9f       	mul	r23, r20
 83c:	33 27       	eor	r19, r19
 83e:	a0 0d       	add	r26, r0
 840:	61 1d       	adc	r22, r1
 842:	23 1f       	adc	r18, r19
 844:	84 9f       	mul	r24, r20
 846:	60 0d       	add	r22, r0
 848:	21 1d       	adc	r18, r1
 84a:	82 2f       	mov	r24, r18
 84c:	76 2f       	mov	r23, r22
 84e:	6a 2f       	mov	r22, r26
 850:	11 24       	eor	r1, r1
 852:	9f 57       	subi	r25, 0x7F	; 127
 854:	50 40       	sbci	r21, 0x00	; 0
 856:	9a f0       	brmi	.+38     	; 0x87e <__DATA_REGION_LENGTH__+0x7e>
 858:	f1 f0       	breq	.+60     	; 0x896 <__DATA_REGION_LENGTH__+0x96>
 85a:	88 23       	and	r24, r24
 85c:	4a f0       	brmi	.+18     	; 0x870 <__DATA_REGION_LENGTH__+0x70>
 85e:	ee 0f       	add	r30, r30
 860:	ff 1f       	adc	r31, r31
 862:	bb 1f       	adc	r27, r27
 864:	66 1f       	adc	r22, r22
 866:	77 1f       	adc	r23, r23
 868:	88 1f       	adc	r24, r24
 86a:	91 50       	subi	r25, 0x01	; 1
 86c:	50 40       	sbci	r21, 0x00	; 0
 86e:	a9 f7       	brne	.-22     	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
 870:	9e 3f       	cpi	r25, 0xFE	; 254
 872:	51 05       	cpc	r21, r1
 874:	80 f0       	brcs	.+32     	; 0x896 <__DATA_REGION_LENGTH__+0x96>
 876:	0c 94 94 03 	jmp	0x728	; 0x728 <__fp_inf>
 87a:	0c 94 df 03 	jmp	0x7be	; 0x7be <__fp_szero>
 87e:	5f 3f       	cpi	r21, 0xFF	; 255
 880:	e4 f3       	brlt	.-8      	; 0x87a <__DATA_REGION_LENGTH__+0x7a>
 882:	98 3e       	cpi	r25, 0xE8	; 232
 884:	d4 f3       	brlt	.-12     	; 0x87a <__DATA_REGION_LENGTH__+0x7a>
 886:	86 95       	lsr	r24
 888:	77 95       	ror	r23
 88a:	67 95       	ror	r22
 88c:	b7 95       	ror	r27
 88e:	f7 95       	ror	r31
 890:	e7 95       	ror	r30
 892:	9f 5f       	subi	r25, 0xFF	; 255
 894:	c1 f7       	brne	.-16     	; 0x886 <__DATA_REGION_LENGTH__+0x86>
 896:	fe 2b       	or	r31, r30
 898:	88 0f       	add	r24, r24
 89a:	91 1d       	adc	r25, r1
 89c:	96 95       	lsr	r25
 89e:	87 95       	ror	r24
 8a0:	97 f9       	bld	r25, 7
 8a2:	08 95       	ret

000008a4 <_exit>:
 8a4:	f8 94       	cli

000008a6 <__stop_program>:
 8a6:	ff cf       	rjmp	.-2      	; 0x8a6 <__stop_program>
